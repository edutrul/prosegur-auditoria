<?php

/**
 * @file
 * pau_core.module functionality.
 */

define('CONTENT_TYPE_AUDIT_SELLS', 'auditoria_de_venta');
define('CONTENT_TYPE_AUDIT_SERVICE', 'auditoria_de_servicio');
define('CONTENT_TYPE_AUDIT_TECHNIQUE', 'auditoria_tecnica');

define('FIELD_AUDIT_SELLS', 'field_auditoria_venta');
define('FIELD_AUDIT_SERVICE', 'field_auditoria_servicio');
define('FIELD_AUDIT_TECHNIQUE', 'field_auditoria_tecnica');


define('FIELD_AUDIT_SELLS_CONFIRM', 'field_venta_conformidad');
define('FIELD_AUDIT_SELLS_SCORE', 'field_venta_ponderacion');

define('FIELD_AUDIT_SERVICE_CONFIRM', 'field_servicio_conformidad');
define('FIELD_AUDIT_SERVICE_SCORE', 'field_servicio_ponderacion');

define('FIELD_AUDIT_TECHNIQUE_CONFIRM', 'field_tecnica_conformidad');
define('FIELD_AUDIT_TECHNIQUE_SCORE', 'field_tecnica_ponderacion');



/**
 * Implements hook_form_alter().
 */
function pau_core_form_alter(&$form, $form_state, $form_id) {
  if ($form_id === 'auditoria_node_form') {
    $form['field_auditorias_permitidas'][LANGUAGE_NONE]['#disabled'] = TRUE;
    $params = drupal_get_query_parameters();
    $fields_to_hide = array(
      'field_auditoria_venta',
      'field_auditoria_tecnica',
      'field_auditoria_servicio',
    );
    foreach ($fields_to_hide as $field_to_hide) {
      if (!empty($params[$field_to_hide]) && $params[$field_to_hide] === 'hide') {
        $form[$field_to_hide]['#access'] = FALSE;
        // Get audits allowed to remove from default value.
        $audits_allowed_default_value = $form['field_auditorias_permitidas'][LANGUAGE_NONE]['#default_value'];
        for ($i = 0; $i < count($audits_allowed_default_value); $i++) {
          if ($field_to_hide == $audits_allowed_default_value[$i]) {
            unset($form['field_auditorias_permitidas'][LANGUAGE_NONE]['#default_value'][$i]);
            break;
          }
        }
        
      }
    }
    //$form['#submit'][] = '_auditoria_average_result_submit';
  }
}

/**
 * implements hook_node_presave().
 */
function pau_core_node_presave($node) {
  $score = 0;
  $audit = _get_current_audit($node->type);
  if ($audit) {
    $field_x = 'field_venta_conformidad';
    // @TODO: Update logic to get last poderacion_NUMBER instead of hardcoding limit.
    for ($i = 1; $i < 100; $i++) {
      if (!empty($node->{$audit['field_conformidad'] . '_' . $i}[LANGUAGE_NONE][0]['value']) &&
        !empty($node->{$audit['field_ponderacion'] . '_' . $i}[LANGUAGE_NONE][0]['value'])) {
        $score += $node->{$audit['field_ponderacion'] . '_' . $i}[LANGUAGE_NONE][0]['value'];
      }
    }
    $node->{$audit['field_ponderacion']}[LANGUAGE_NONE][0]['value'] = $score;
  }
}

/**
 * Get current audit information.
 * 
 * @param string $audit_type
 *   Type of audit.
 * @return array
 *   Array for audits else FALSE.
 */
function _get_current_audit($content_type) {
  switch ($content_type) {
    case CONTENT_TYPE_AUDIT_SELLS:
      return array(
        'field_auditoria' => FIELD_AUDIT_SELLS,
        'field_conformidad' => FIELD_AUDIT_SELLS_CONFIRM,
        'field_ponderacion' => FIELD_AUDIT_SELLS_SCORE,
      );
      return 'field_venta_ponderacion';
    case CONTENT_TYPE_AUDIT_SERVICE:
      return array(
        'content_type' => CONTENT_TYPE_AUDIT_SERVICE,
        'field_auditoria' => FIELD_AUDIT_SERVICE,
        'field_conformidad' => FIELD_AUDIT_SERVICE_CONFIRM,
        'field_ponderacion' => FIELD_AUDIT_SERVICE_SCORE,    
      );
      return 'field_servicio_ponderacion';
    case CONTENT_TYPE_AUDIT_TECHNIQUE:
      return array(
        'content_type' => CONTENT_TYPE_AUDIT_TECHNIQUE,
        'field_auditoria' => FIELD_AUDIT_TECHNIQUE,
        'field_conformidad' => FIELD_AUDIT_TECHNIQUE_CONFIRM,
        'field_ponderacion' => FIELD_AUDIT_TECHNIQUE_SCORE        
      );
    default:
      return FALSE;
  }
}

/**
 * Implements hook_menu().
 */
function pau_core_menu() {
  $items = array();
  // Allowed values: asesoria-ventas && tecnico.
  $items['reportes/auditoria/%/%'] = array(
    'title' => 'Evolución',
    'title callback' => 'pau_core_report_audit_single_company_title',
    'title arguments' => array(2, 3),
    'page callback' => 'pau_core_report_audit_single_company',
    'page arguments' => array(2, 3),
    'access callback' => TRUE,
  );
  $items['reportes/auditoria/%/contratista'] = array(
    'title' => 'Evolución',
    'title callback' => 'pau_core_report_audit_all_companies_title',
    'title arguments' => array(2),
    'page callback' => 'pau_core_report_audit_all_companies',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );

  return $items;
}

function pau_core_report_audit_single_company_title($audit_type, $contratista = 'prosegur') {
  if ($audit_type === 'asesoria-ventas') {
    $report_name = 'Asesor de ventas';
  }
  elseif ($audit_type === 'tecnico') {
    $report_name = 'Tecnico';
  }
  return t('Evolución @report_name - @contratista', array(
    '@report_name' => $report_name,
    '@contratista' => ucfirst($contratista)
  ));
}

/**
 * Page callback for pau_core_report_asesor_ventas_audit_single_company().
 */
function pau_core_report_audit_single_company($audit_type = 'asesoria-ventas', $contratista = 'prosegur') {
  if ($audit_type === 'asesoria-ventas') {
    $content_types = array(CONTENT_TYPE_AUDIT_SELLS);
    $fiel_audit_sell_or_technique = 'field_asesor_de_ventas';
    $vocabulary_name = 'asesor';
  }
  elseif ($audit_type === 'tecnico') {
    $content_types = array(CONTENT_TYPE_AUDIT_SERVICE, CONTENT_TYPE_AUDIT_TECHNIQUE);
    $fiel_audit_sell_or_technique = 'field_tecnico';
    $vocabulary_name = 'tecnico';
  }
  $contratista_tid = _get_term_from_name($contratista, 'contratista');
  if (!$contratista_tid) {
    return '';
  }
  $header = array(
    // Creating array that contains data from first cell
    array('data' => t('Antiguedad')),   
    // Second cell
    array('data' => t('Nombre')),   
  );
  $dates = array();
  for ($i = 3; $i >= 0; $i--) {
    $month_name = date('M', strtotime("-$i Months"));
    $dates[] = array(
      'month' => date('m', strtotime("-$i Months")),
      'year' => date('Y', strtotime("-$i Months")),
      'month_name' => $month_name
    );
    $header[] = array('data' => $month_name);
  }
  $rows = array();
  $header[] = array('data' => 'Promedio');
  $vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name);
  $workers = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));
  foreach ($workers as $worker) {
    if (!empty($worker->field_contratista[LANGUAGE_NONE][0]['target_id']) && 
      $worker->field_contratista[LANGUAGE_NONE][0]['target_id'] === $contratista_tid) {
      $query = new EntityFieldQuery();
      $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', array($content_types), 'IN')
        ->propertyCondition('status', NODE_PUBLISHED)
        ->fieldCondition($fiel_audit_sell_or_technique, 'target_id', $worker->tid)
        // Run the query as user 1.
        ->addMetaData('account', user_load(1));
      $result = $query->execute();
      if (isset($result['node'])) {
        $auditorias_nids = array_keys($result['node']);
        $auditorias_nodes = entity_load('node', $auditorias_nids);
        $months_ponderacion = array();
        // Get ponderaciones of != months and group them together on months.
        foreach ($auditorias_nodes as $auditoria_node) {
          $ponderacion = 0;
          if ($audit_type === 'asesoria-ventas') {
            $month = _pau_core_get_month_from_nid($auditoria_node->nid, 'field_auditoria_venta');
            $ponderacion = !empty($auditoria_node->field_venta_ponderacion[LANGUAGE_NONE][0]['value']) ? $auditoria_node->field_venta_ponderacion[LANGUAGE_NONE][0]['value'] : 0;
            $months_ponderacion[$month][] = $ponderacion;
          }
          elseif ($audit_type === 'tecnico') {
            if (!empty($auditoria_node->field_tecnica_ponderacion[LANGUAGE_NONE][0]['value'])) {
              $month = _pau_core_get_month_from_nid($auditoria_node->nid, 'field_auditoria_tecnica');
              $ponderacion = $auditoria_node->field_tecnica_ponderacion[LANGUAGE_NONE][0]['value'];
              $months_ponderacion[$month][] = $ponderacion;
            }
            elseif (!empty($auditoria_node->field_servicio_ponderacion[LANGUAGE_NONE][0]['value'])) {
              $month = _pau_core_get_month_from_nid($auditoria_node->nid, 'field_auditoria_servicio');
              $ponderacion = $auditoria_node->field_servicio_ponderacion[LANGUAGE_NONE][0]['value'];
              $months_ponderacion[$month][] = $ponderacion;
            }
          }
        }
        $this_row = array();
        $this_row[] = array('data' => t('+@months meses', array('@months' => $worker->tid)));
        $this_row[] = array('data' => $worker->name);
        $sum = 0.0;
        $months_num = 0;
        for ($i = 3; $i >= 0; $i--) {
          $month_name = date('m', strtotime("-$i Months"));
          if (!empty($months_ponderacion[$month_name])) {
            $ponderacion = array_sum($months_ponderacion[$month_name]) / count($months_ponderacion[$month_name]);
            $sum += $ponderacion;
            $months_num++;
            $this_row[] = array('data' => $ponderacion);
          }
          else {
            $this_row[] = array('data' => '');
          }
        }
        $total_ponderacion_by_user = $sum / $months_num;
        $this_row[] = array('data' => $total_ponderacion_by_user, 'style' => get_semaforo_style($total_ponderacion_by_user));
        $rows[] = $this_row;
      }
    }
  }

  return theme('table', array('header' => $header, 'rows'=> $rows));
}

function _pau_core_get_month_from_nid($nid, $field_audit) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'auditoria')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition($field_audit, 'target_id', $nid)
    // Run the query as user 1.
    ->addMetaData('account', user_load(1));
  $result = $query->execute();
  if (isset($result['node'])) {
    $auditoria_nid = array_keys($result['node']);
    $auditoria_node = node_load($auditoria_nid[0]);
    if (!empty($auditoria_node->field_auditoria_fecha[LANGUAGE_NONE][0]['value'])) {
      return format_date($auditoria_node->field_auditoria_fecha[LANGUAGE_NONE][0]['value'], 'custom', 'm');
    }
  }
  return FALSE;
}

function get_semaforo_style($average) {
  switch($average) {
    case ($average > 90):
      return 'background: orange';
    case ($average >= 85 && $average <= 89):
      return 'background: green';
    case ($average >= 74 && $average <= 84):
      return 'background: yellow';
    case ($average <= 73):
      return 'background: red';
  }
}

/**
 * Helper function to dynamically get the tid from the term_name
 *
 * @param $term_name Term name
 * @param $vocabulary_name Name of the vocabulary to search the term in
 *
 * @return Term id of the found term or else FALSE
 */
function _get_term_from_name($term_name, $vocabulary_name) {
  if ($vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name)) {
    $tree = taxonomy_get_tree($vocabulary->vid);
    foreach ($tree as $term) {
      if (strtolower($term->name) === strtolower($term_name)) {
        return $term->tid;
      }
    }
  }

  return FALSE;
}

function pau_core_report_audit_all_companies_title($audit_type) {
  if ($audit_type === 'asesoria-ventas') {
    $report_name = 'Asesor de ventas';
  }
  elseif ($audit_type === 'tecnico') {
    $report_name = 'Tecnico';
  }
  return t('Evolución @report_name - Contratista', array(
    '@report_name' => $report_name
  ));
}

/**
 * Page callback for pau_core_report_audit_all_companies().
 */
function pau_core_report_audit_all_companies($audit_type = 'asesoria-ventas') {
  if ($audit_type === 'asesoria-ventas') {
    $content_types = array(CONTENT_TYPE_AUDIT_SELLS);
    $fiel_audit_sell_or_technique = 'field_asesor_de_ventas';
    $vocabulary_name = 'asesor';
  }
  elseif ($audit_type === 'tecnico') {
    $content_types = array(CONTENT_TYPE_AUDIT_SERVICE, CONTENT_TYPE_AUDIT_TECHNIQUE);
    $fiel_audit_sell_or_technique = 'field_tecnico';
    $vocabulary_name = 'tecnico';
  }

  $header = array(
    // Creating array that contains data from first cell
    array('data' => t('Antiguedad')),   
    // Second cell
    array('data' => t('Contratista')),   
  );
  $dates = array();
  for ($i = 3; $i >= 0; $i--) {
    $month_name = date('M', strtotime("-$i Months"));
    $dates[] = array(
      'month' => date('m', strtotime("-$i Months")),
      'year' => date('Y', strtotime("-$i Months")),
      'month_name' => $month_name
    );
    $header[] = array('data' => $month_name);
  }
  $header[] = array('data' => 'Promedio');
  $vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_name);
  $workers = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));
  $score = array();
  foreach ($workers as $worker) {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', array($content_types), 'IN')
      ->propertyCondition('status', NODE_PUBLISHED)
      ->fieldCondition($fiel_audit_sell_or_technique, 'target_id', $worker->tid)
      // Run the query as user 1.
      ->addMetaData('account', user_load(1));
    $result = $query->execute();
    if (isset($result['node'])) {
      $auditorias_nids = array_keys($result['node']);
      $auditorias_nodes = entity_load('node', $auditorias_nids);
      $months_ponderacion = array();
      // Get ponderaciones of != months and group them together on months.
      foreach ($auditorias_nodes as $auditoria_node) {
        $ponderacion = 0;
        if ($audit_type === 'asesoria-ventas') {
          $month = _pau_core_get_month_from_nid($auditoria_node->nid, 'field_auditoria_venta');
          $ponderacion = !empty($auditoria_node->field_venta_ponderacion[LANGUAGE_NONE][0]['value']) ? $auditoria_node->field_venta_ponderacion[LANGUAGE_NONE][0]['value'] : 0;
          $months_ponderacion[$month][] = $ponderacion;
        }
        elseif ($audit_type === 'tecnico') {
          if (!empty($auditoria_node->field_tecnica_ponderacion[LANGUAGE_NONE][0]['value'])) {
            $month = _pau_core_get_month_from_nid($auditoria_node->nid, 'field_auditoria_tecnica');
            $ponderacion = $auditoria_node->field_tecnica_ponderacion[LANGUAGE_NONE][0]['value'];
            $months_ponderacion[$month][] = $ponderacion;
          }
          elseif (!empty($auditoria_node->field_servicio_ponderacion[LANGUAGE_NONE][0]['value'])) {
            $month = _pau_core_get_month_from_nid($auditoria_node->nid, 'field_auditoria_servicio');
            $ponderacion = $auditoria_node->field_servicio_ponderacion[LANGUAGE_NONE][0]['value'];
            $months_ponderacion[$month][] = $ponderacion;
          }
        }
      }
      $this_row = array();
      $this_row[] = array('data' => t('+@months meses', array('@months' => $worker->tid)));
      $this_row[] = array('data' => $worker->name);
      $sum = 0.0;
      $months_num = 0;
      $contratista_tid = $worker->field_contratista[LANGUAGE_NONE][0]['target_id'];
      for ($i = 3; $i >= 0; $i--) {
        $month_name = date('m', strtotime("-$i Months"));
        if (!empty($months_ponderacion[$month_name])) {
          $ponderacion = array_sum($months_ponderacion[$month_name]) / count($months_ponderacion[$month_name]);
          $score[$contratista_tid][$month_name][] = $ponderacion;
          $sum += $ponderacion;
          $months_num++;
        }
      }
    }
  }
  $sum = 0.0;
  $months_num = 0;
  $rows = array();
  foreach ($score as $contratista_tid => $months_ponderacion) {
    dpm($contratista_tid);
    $this_row = array();
    $contratista = taxonomy_term_load($contratista_tid);
    $this_row[] = array('data' => t('+@months meses', array('@months' => $contratista->tid)));
    $this_row[] = array('data' => $contratista->name);
    for ($i = 3; $i >= 0; $i--) {
      $month_name = date('m', strtotime("-$i Months"));
      if (!empty($months_ponderacion[$month_name])) {
        $ponderacion = array_sum($months_ponderacion[$month_name]) / count($months_ponderacion[$month_name]);
        $score[$contratista_tid][$month_name] = $ponderacion;
        $sum += $ponderacion;
        $months_num++;
        $this_row[] = array('data' => $ponderacion);
      }
      else {
        $this_row[] = array('data' => '');
      }
    }
    $total_ponderacion_by_contratista = $sum / $months_num;
    $this_row[] = array('data' => $total_ponderacion_by_contratista, 'style' => get_semaforo_style($total_ponderacion_by_contratista));
    $rows[] = $this_row;
  }
    dpm($score);



  return theme('table', array('header' => $header, 'rows'=> $rows));
}